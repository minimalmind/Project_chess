



/**********************************************************************************
*****************/

/*

function checkMoveUp(rowDrag, rowDrop, columnDrag, columnDrop, howManyMoves)
{
	var rowSource = parseInt(rowDrag);
	var rowDest = parseInt(rowDrop);
	var i=1;

	var obstacleValue, obstacleClass, myValue;
	if (columnDrop == columnDrag)
	{
		while (i <= howManyMoves)
		{
			obstacleValue = ($("#d"+(rowSource-i)+""+columnDrag).find("img").attr("value"));
			obstacleClass = ($("#d"+(rowSource-i)+""+columnDrag).find("img").attr("value"));
			myValue = ($("#d"+(rowSource)+""+(columnDrag)).find("img").attr("value"));
			if (obstacleValue == myValue || obstacleValue == undefined)
			{
				if (rowSource == rowDest+i && obstacleValue == undefined)
					return true;
				if (obstacleValue != undefined)
					return false;
				i++;
			}
			else if (obstacleValue != undefined)
			{
				if (rowSource == rowDest+i && obstacleClass != "black-pawn" && obstacleClass != "white-pawn" )
				{
					capturePiece();
					return true;
				}
				else
					return false;
			}
		}
	}
	return false;
}

function checkMoveDown(rowDrag, rowDrop, columnDrag, columnDrop, howManyMoves)
{
	var rowSource = parseInt(rowDrag);
	var rowDest = parseInt(rowDrop);

	var i, obstacleValue, myValue;

	i = 1;

	if (columnDrop == columnDrag)
	{
		while (i <= howManyMoves)
		{
			obstacleValue = ($("#d"+(rowSource+i)+""+columnDrag).find("img").attr("value"));
			myValue = ($("#d"+(rowSource)+""+(columnDrag)).find("img").attr("value"));

			if (obstacleValue == myValue || obstacleValue == undefined)
			{
				if (rowSource == rowDest-i && obstacleValue == undefined)
					return true;
				if (obstacleValue != undefined)
					return false;
				i++;
			}
			else if (obstacleValue != undefined)
			{
				if (rowSource == rowDest-i && $("#d"+(rowSource-i)+""+columnDrag).find("img").attr("class") != "black-pawn" && $("#d"+(rowSource-i)+""+columnDrag).find("img").attr("class") != "white-pawn" )
				{
					capturePiece();
					return true;
				}
				else
					return false;
			}

		}
	}
	return false;
}

function checkMoveLeft(rowDrag, rowDrop, columnDrag, columnDrop, howManyMoves)
{
	var columnSource = parseInt(columnDrag);
	var columnDest = parseInt(columnDrop);

	i = 1
	var obstacleValue, myValue;
		if (rowDrag == rowDrop)
		{
			while (i <= howManyMoves)
			{
				obstacleValue = ($("#d"+(rowDrag)+""+(columnSource+i)).find("img").attr("value"));
				myValue = ($("#d"+(rowDrag)+""+(columnSource)).find("img").attr("value"));

				if (obstacleValue == myValue || obstacleValue == undefined)
				{
					if (columnSource == columnDest-i && obstacleValue == undefined)
						return true;
					else if (obstacleValue != undefined)
						return false;
					i++;
				}
				else if (obstacleValue != undefined)
				{
					if (columnSource == columnDest - i)
					{
						capturePiece();
						return true;
					}
					else
						return false;
				}
			}
		}
	return false;
}

function checkMoveRight(rowDrag, rowDrop, columnDrag, columnDrop, howManyMoves)
{
	var columnSource = parseInt(columnDrag);
	var columnDest = parseInt(columnDrop);

	i = 1;
	var obstacleValue, myValue;
	if (rowDrag == rowDrop)
	{
		while (i <= howManyMoves)
		{
			obstacleValue = ($("#d"+(rowDrag)+""+(columnSource-i)).find("img").attr("value"));
			myValue = ($("#d"+(rowDrag)+""+(columnSource)).find("img").attr("value"));

			if (obstacleValue == myValue || obstacleValue == undefined)
			{
				if (columnSource == columnDest+i && obstacleValue == undefined)
					return true;
				else if (obstacleValue != undefined)
					return false;

				i++;
			}
			else if (obstacleValue != undefined)
			{
				if (columnSource == columnDest + i)
				{
					capturePiece();
					return true;
				}
				else
					return false;
			}
		}
	}
	return false;
}